<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zero.generator.mapper.GenTemplateMapper">
    
    <resultMap type="GenTemplate" id="GenTemplateResult">
        <result property="id"    column="id"    />
        <result property="templateGroup"    column="template_group"    />
        <result property="templateName"    column="template_name"    />
        <result property="path"    column="path"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectGenTemplateVo">
        select id, template_group, template_name, path, del_flag, create_by, create_time, update_by, update_time, remark from gen_template
    </sql>

    <select id="selectGenTemplateList" parameterType="GenTemplate" resultMap="GenTemplateResult">
        <include refid="selectGenTemplateVo"/>
        <where>  
            <if test="templateGroup != null  and templateGroup != ''"> and template_group = #{templateGroup}</if>
            <if test="templateName != null  and templateName != ''"> and template_name like concat('%', #{templateName}, '%')</if>
            <if test="path != null  and path != ''"> and path = #{path}</if>
        </where>
    </select>
    
    <select id="selectGenTemplateById" parameterType="Long" resultMap="GenTemplateResult">
        <include refid="selectGenTemplateVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertGenTemplate" parameterType="GenTemplate">
        insert into gen_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="templateGroup != null">template_group,</if>
            <if test="templateName != null">template_name,</if>
            <if test="path != null">path,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="templateGroup != null">#{templateGroup},</if>
            <if test="templateName != null">#{templateName},</if>
            <if test="path != null">#{path},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateGenTemplate" parameterType="GenTemplate">
        update gen_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="templateGroup != null">template_group = #{templateGroup},</if>
            <if test="templateName != null">template_name = #{templateName},</if>
            <if test="path != null">path = #{path},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteGenTemplateById" parameterType="Long">
        delete from gen_template where id = #{id}
    </delete>

    <delete id="deleteGenTemplateByIds" parameterType="String">
        delete from gen_template where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>